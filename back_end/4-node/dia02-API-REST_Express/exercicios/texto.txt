ExercÃ­cio 1
Qual Ã© a funÃ§Ã£o do cÃ³digo de status 400 e 422?

RESOLUÃ‡ÃƒO:
400 Bad Request
The HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (for example, malformed request syntax, invalid request message framing, or deceptive request routing).

422 Unprocessable Entity
The HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.

ExercÃ­cio 2
Qual Ã© a funÃ§Ã£o do cÃ³digo de status 401?

RESOLUÃ‡ÃƒO:
401 Unauthorized
The HyperText Transfer Protocol (HTTP) 401 Unauthorized response status code indicates that the client request has not been completed because it lacks valid authentication credentials for the requested resource.

This status code is sent with an HTTP WWW-Authenticate response header that contains information on how the client can request for the resource again after prompting the user for authentication credentials.

Crie o diretÃ³rio src e dentro dele um arquivo movies.json com o os filmes da nossa locadora:

Copiar
[
  {
    "id": 1,
    "movie": "Avatar",
    "price": 5
  },
   {
    "id": 2,
    "movie": "Gente Grande",
    "price": 2
  },
  {
    "id": 3,
    "movie": "O Jogo",
    "price": 3
  },
  {
    "id": 4,
    "movie": "Quebrando a Banca",
    "price": 5
  },
  {
    "id": 5,
    "movie": "Lilo & Stitch",
    "price": 2
  },
  {
    "id": 6,
    "movie": "Os Fantasmas se Divertem",
    "price": 2
  },
  {
    "id": 7,
    "movie": "Meninas Malvadas",
    "price": 3
  }
]
Agora, faÃ§a os exercÃ­cios a seguir:

ðŸš€ ExercÃ­cio 3
Crie um servidor Node.js utilizando o framework Express.

ðŸš€ ExercÃ­cio 4
Crie uma funÃ§Ã£o de leitura do JSON com o modulo fs.

ðŸš€ ExercÃ­cio 5
Crie um endpoint do tipo GET com a rota /movies/:id, que possa listar um filme do JSON por id.

ðŸš€ ExercÃ­cio 6
Crie um endpoint do tipo GET com a rota /movies, que possa listar todos os filmes do JSON.

ðŸš€ ExercÃ­cio 7
Crie um endpoint do tipo POST com a rota /movies, para cadastrar um novo filme no JSON.

O corpo da requisiÃ§Ã£o deve receber o seguinte formato:

Copiar
{
  "movie": "Vingadores",
  "price": 5
}
ðŸš€ ExercÃ­cio 8
Crie um endpoint do tipo PUT com a rota /movies/:id, que possa editar informaÃ§Ãµes de um filme do JSON.

O corpo da requisiÃ§Ã£o deve receber o seguinte formato:

Copiar
{
  "movie": "Vingadores: Ultimato",
  "price": 5
}
ðŸš€ ExercÃ­cio 9
Crie um endpoint do tipo DELETE com a rota /movies/:id que possa deletar um filme do JSON.

ðŸš€ ExercÃ­cio 10
Crie um endpoint do tipo GET com a rota /movies/search, que possa listar todos os filmes do JSON.

A rota deve receber a informaÃ§Ã£o por query e a chave deve-se chamar q. A chave vai trazer consigo valor de â€˜genteâ€™ por exemplo, e o filtro deve trazer apenas os filmes com esse termo, se nÃ£o encontrar, traga um array vazio.